import numpy as np
from sklearn.preprocessing import normalize

weights = np.array([0.90759588,  4.77365172,  0.8771005,   0.43324404,  6.33486176,  0.87008563,
  0.60639639,  4.76273361,  0.17210085,  0.02747048,  1.08775725, 0.46268714,
  0.39770698,  0.42458757,  0.4958771,   0.82629336,  4.68860071,  0.20892782,
  0.77898644,  3.32710488,  0.22604133,  0.7976902,   0.7246625,   0.60428786,
  0.78655751,  4.74956047,  0.20839334])
print weights.reshape((3, 3, 3), order='F')

nor= normalize(weights[:,np.newaxis], axis=0).ravel()
print "nor is ", nor
print nor.reshape((3, 3, 3), order='F')
print "-----------------------"

weights_1 =np.array([  6.76570058e-01,   3.23376047e+00,   3.71956853e-01,   1.22657533e-01,
   4.03903027e+00,   9.83761998e-01,   2.30890984e-01,   3.42963427e+00,
   6.27018068e-01,  -1.47252820e-01,   2.48248885e+00,  -3.20176251e-01,
   1.94587399e-01,   5.13280427e-01,   9.81128532e-04,   9.38525397e-01,
   3.26675463e+00,   6.17606805e-01,   9.88108445e-02,   1.80182017e+00,
   4.66801537e-01,   1.59381269e-01,   6.35073095e-01,  -2.85245183e-03,
   8.41231207e-01,   2.28111681e+00,   3.12997017e-02])
# print weights_1.reshape((3, 3, 3), order='F')

r_3 = np.array([  6.76570058e-01,   5.53376047e+00,   3.71956853e-01,   1.22657533e-01,
   7.10569693e+00,   9.83761998e-01,   2.30890984e-01,   5.72963427e+00,
   6.27018068e-01,  -3.47252820e-01,   4.18248885e+00,  -6.20176251e-01,
  -5.41260064e-03,   4.13280427e-01,  -4.99018871e-01,   9.38525397e-01,
   5.56675463e+00,   6.17606805e-01,  -1.18915550e-03,   3.33515350e+00,
   4.66801537e-01,   1.59381269e-01,   5.35073095e-01,  -2.02852452e-01,
   8.41231207e-01,   4.58111681e+00,   3.12997017e-02])
# print r_3.reshape((3, 3, 3), order='F')


